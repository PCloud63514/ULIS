package org.ulis.presentation;

import java.io.IOException;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletResponse;

import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;
import org.ulis.domain.NoticeBoard;
import org.ulis.service.NoticeService;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@Controller
@RequestMapping("/notice")
public class NoticeController {
	@Resource
	private NoticeService noticeService;
	
	@RequestMapping(value = "/find", method= RequestMethod.GET)
	public ModelAndView find(HttpServletResponse response, NoticeBoard noticeBoard) {
		System.out.println("Result:" + noticeBoard.getTitle());
		System.out.println(noticeBoard.getSubjectNo());
		List<NoticeBoard> noticeBoardList = this.noticeService.find(noticeBoard);
<<<<<<< .mine
		ObjectMapper mapper = new ObjectMapper();
		try {
			response.getWriter().print(mapper.writeValueAsString(noticeBoardList));
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		
||||||| .r244
=======
	//	List<String> grade = this.noticeService.
>>>>>>> .r251
		ModelAndView modelAndView = new ModelAndView("/notice/find");
		modelAndView.addObject("noticeBoardList", noticeBoardList);

		return null;
	}

	@RequestMapping(value="/add")
	public ModelAndView add() {
		return new ModelAndView("/notice/add");
	}
	
	@RequestMapping(value="/add", method=RequestMethod.POST)
	public ModelAndView add(@RequestParam("gradeList") List<String> gradeList, NoticeBoard noticeBoard, MultipartHttpServletRequest multipartHttpServletRequest) throws Exception {
		int noticeSEQ = this.noticeService.addNotice(gradeList,noticeBoard);
		MultipartFile file = multipartHttpServletRequest.getFile("image");
		if(!file.isEmpty()) {
			this.noticeService.addFile(file,"I",noticeSEQ);			
		}
		
		List<MultipartFile> files = multipartHttpServletRequest.getFiles("file");
		if(!files.isEmpty() 
				&& !"".equals(files.get(0).getOriginalFilename())){
			for(int fileCount=0; fileCount<files.size(); fileCount++ ) {
				this.noticeService.addFile(files.get(fileCount),"D",noticeSEQ);
			}	
		} 
		return new ModelAndView(new RedirectView("/notice/find"));
	}
		
	@RequestMapping(value="/view/{noticeBoardNo}", method=RequestMethod.GET)
	public ModelAndView view(@PathVariable int noticeBoardNo) {
		ModelAndView modelAndView = new ModelAndView("/notice/view");
		
		NoticeBoard noticeBoard = this.noticeService.view(noticeBoardNo);
		modelAndView.addObject(noticeBoard);
		
		return modelAndView;
	}
	
	
	@RequestMapping(value="/remove/{noticeBoardNo}", method=RequestMethod.GET)
	public ModelAndView remove(@PathVariable int noticeBoardNo) {
		this.noticeService.remove(noticeBoardNo);
		
		return new ModelAndView(new RedirectView("/notice/find"));
	}
	
	public void edit() {
	}

	public void alarm() {

	}

}
