package org.ulis.presentation;

import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;
import org.ulis.domain.Student;
import org.ulis.service.StudentService;

@Controller
@RequestMapping("/student")
public class StudentController {
	@Resource
	private StudentService studentService;

	@RequestMapping
	public ModelAndView find(HttpServletRequest request) { // 학생목록조회
		HttpSession httpSession = request.getSession(false);

		if (httpSession == null) {
			return null; // 원래창으로 리턴(원래창 경로써주기)
		} else {
			int administratorSubjectNo = (int) httpSession.getAttribute("subjectNo");
			List<Map<String, Object>> studentList = this.studentService.find(administratorSubjectNo);

			ModelAndView modelAndView = new ModelAndView("/student/student");
			modelAndView.addObject("studentList", studentList);
			return modelAndView;
		}
	}

	@RequestMapping(value = "/view/{studentNo}", method = RequestMethod.GET)
	public ModelAndView view(@PathVariable String studentNo, HttpServletRequest request) {
		HttpSession httpSession = request.getSession(false);

		if (httpSession == null) {
			return null;
		} else {
			Map<String, Object> studentInfo = this.studentService.view(studentNo);

			System.out.println(studentNo);
			System.out.println(studentInfo.get("STUDENT_NAME"));
			ModelAndView modelAndView = new ModelAndView("/student/view");
			modelAndView.addObject("studentView", studentInfo);

			return modelAndView;
		}

	}

	@RequestMapping(value = "/password/check/mobile", method = RequestMethod.POST)
	public @ResponseBody ResponseEntity<String> passwordCheckMobile(HttpServletRequest request, String password) {
		HttpHeaders httpHeaders = new HttpHeaders();
		httpHeaders.setContentType(new MediaType("text", "json", Charset.forName("UTF-8")));
		boolean b = studentService.check(password);
		if (b) {
			return new ResponseEntity<String>("true", httpHeaders, HttpStatus.OK);
		}
		return new ResponseEntity<String>("false", httpHeaders, HttpStatus.BAD_REQUEST);
	}

	@RequestMapping(value = "/update/{studentNo}", method = RequestMethod.GET)
	public ModelAndView updateGET(@PathVariable String studentNo, HttpServletRequest request) {
		HttpSession httpSession = request.getSession(false);

		if (httpSession == null) { // 학번과 학과는 변경 불가..
			return new ModelAndView("/student/find");
		} else {
			// 학번과 학과를 보여줘야겠지..
			Map<String, Object> studentInfo = this.studentService.view(studentNo);
			String updateStudentNo = (String) studentInfo.get("STUDENTNO");
			String updateSubjectName = (String) studentInfo.get("SUBJECTNAME");

			Map<String, Object> searchStudentInfo = new HashMap<String, Object>();
			searchStudentInfo.put("studentNo", updateStudentNo);
			searchStudentInfo.put("subjectName", updateSubjectName);

			ModelAndView modelAndView = new ModelAndView("/student/update");
			modelAndView.addObject("searchStudentInfo", searchStudentInfo);

			return modelAndView;
		}
	}

	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public ModelAndView updatePOST(HttpServletRequest request) throws UnsupportedEncodingException {
		String name = request.getParameter("name");
		String startGrade = request.getParameter("grade");
		int lastGrade = Integer.parseInt(startGrade);
		String password = request.getParameter("pwd");
		String studentNoLast = (String) request.getParameter("studentNo");

		if(name == null || password == null || "".equals(name)  || "".equals(password) || lastGrade > 0 ) {
			return new ModelAndView(new RedirectView("/student/update/"+studentNoLast));
		}

		Student student = new Student();
		student.setStudentName(name);
		student.setGrade(lastGrade);
		student.setPassword(password);
		student.setStudentNo(studentNoLast);

		this.studentService.update(student);

		return new ModelAndView(new RedirectView("/student/view/"+studentNoLast));
	}

	@RequestMapping(value = "/edit/mobile", method = RequestMethod.POST)
	public ResponseEntity<String> editPwd(HttpServletRequest request, String password) {
		HttpHeaders httpHeaders = new HttpHeaders();
		httpHeaders.setContentType(new MediaType("text", "json", Charset.forName("UTF-8")));
		
		HttpSession session = request.getSession(true);
		String studentNo = (String)session.getAttribute("id");
		Student student = new Student();
		student.setStudentNo(studentNo);
		student.setPassword(password);
		this.studentService.edit(student);
		
		return new ResponseEntity<String>("true", httpHeaders, HttpStatus.OK);

	}
}
