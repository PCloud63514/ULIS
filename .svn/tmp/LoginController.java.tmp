package org.ulis.presentation;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;
import org.ulis.service.LoginService;

@Controller

public class LoginController {
	@Resource
	private LoginService loginService;

	@RequestMapping(value = "/login", method = RequestMethod.GET)
	public ModelAndView loginGet(HttpServletRequest request) {
<<<<<<< .mine
		HttpSession httpSession = request.getSession(false);
		// TODO 로그인 화면을 보여준다.
		
		if(httpSession != null) {
			return new ModelAndView("/login/login2"); // 다음 경로 
		} else {
||||||| .r136
=======
		HttpSession httpSession = request.getSession(false);

		System.out.println(httpSession);
		
		if(httpSession == null) {
			// 세션이 없을경우
>>>>>>> .r154
			return new ModelAndView("/login/login");
<<<<<<< .mine
		}
||||||| .r136
=======
		} else {
			// 세션이 있을경우
			return new ModelAndView(new RedirectView("/notice/find"));
		}
>>>>>>> .r154
	}

	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public ModelAndView loginPost(HttpServletRequest request, @RequestHeader(value = "User-Agent") String userAgent) throws Exception{
		String userAgentName = userAgent.split("[/]")[0];
		
		Boolean isLogined = this.loginService.login(userAgentName, request);
		
		System.out.println(isLogined);
		//로그인이 되었을때
		if(isLogined) {
			return new ModelAndView(new RedirectView("/notice/find"));
		} else {
			return new ModelAndView("/login/login");
		}
	}
	
	@RequestMapping(value = "/logout", method = RequestMethod.GET)
	public ModelAndView logout(HttpServletRequest request) {
		HttpSession httpSession = request.getSession(false);
		if(httpSession != null) {
			httpSession.invalidate();
		}
		
		return new ModelAndView(new RedirectView("/login/login"));
	}
}
