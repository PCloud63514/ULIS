package org.ulis.presentation;

import java.io.UnsupportedEncodingException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.view.RedirectView;
import org.ulis.domain.Student;
import org.ulis.service.StudentService;

@Controller
@RequestMapping("/student")
public class StudentController {
	@Resource
	private StudentService studentService;
	
	
	@RequestMapping(value = "/find", method = RequestMethod.GET)
	public ModelAndView find(HttpServletRequest request) { // 학생목록조회
		HttpSession httpSession = request.getSession(false);
		
		if(httpSession == null) {
			return null; // 원래창으로 리턴(원래창 경로써주기)
		} else {
			int administratorSubjectNo = (int) httpSession.getAttribute("subjectNo");
			List<Map<String, Object>> studentList = this.studentService.find(administratorSubjectNo);
			
			ModelAndView modelAndView = new ModelAndView("/student/find");
			modelAndView.addObject("studentList",studentList);
				return modelAndView;
		}
	}
	
	@RequestMapping(value = "/view/{studentNo}", method = RequestMethod.GET)
	public ModelAndView view(@PathVariable String studentNo, HttpServletRequest request) {
		HttpSession httpSession = request.getSession(false);
		
		if(httpSession == null) {
			return null;
		} else {
			Map<String,Object> studentInfo = this.studentService.view(studentNo);
			
			System.out.println(studentNo);
			System.out.println(studentInfo.get("STUDENT_NAME"));
			ModelAndView modelAndView = new ModelAndView("/student/view");
			modelAndView.addObject("studentView", studentInfo);
			
			return modelAndView;
		}
		
	}
	@RequestMapping(value = "/update/{studentNo}", method = RequestMethod.GET)
	public ModelAndView updateGET(@PathVariable String studentNo, HttpServletRequest request) {
		HttpSession httpSession = request.getSession(false);
		
		if(httpSession == null) { //학번과 학과는 변경 불가..
			return new ModelAndView("/student/find");
		} else {
			//학번과 학과를 보여줘야겠지..
			Map<String,Object> studentInfo = this.studentService.view(studentNo);
			String updateStudentNo = (String)studentInfo.get("STUDENTNO");
			String updateSubjectName = (String)studentInfo.get("SUBJECTNAME");
			
			Map<String, Object> searchStudentInfo = new HashMap<String, Object>();
			searchStudentInfo.put("studentNo", updateStudentNo);
			searchStudentInfo.put("subjectName", updateSubjectName);
			
			ModelAndView modelAndView = new ModelAndView("/student/update");
			modelAndView.addObject("searchStudentInfo", searchStudentInfo);
			
			return modelAndView;
			}
	}
	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public ModelAndView updatePOST(HttpServletRequest request) throws UnsupportedEncodingException {
//		request.setCharacterEncoding("UTF-8");
		String name = request.getParameter("name");
		String startGrade = request.getParameter("grade");
		int lastGrade = Integer.parseInt(startGrade);
		String password = request.getParameter("pwd");
		String studentNoLast = (String)request.getParameter("studentNo");
		
		Student student = new Student();
		student.setStudentName(name);
		student.setGrade(lastGrade);
		student.setPassword(password);
		student.setStudentNo(studentNoLast);
		
		//이제 이값을 디비에 업데이트 시켜야 한다.
		
		this.studentService.update(student);
		
		return new ModelAndView(new RedirectView("/student/find"));
	}
	@RequestMapping(value="/edit", method = RequestMethod.POST)
	public void editPwd(String id,String pw) {
		
			Student student = new Student();
			student.setStudentNo(id);
			student.setPassword(pw);
			this.studentService.edit(student);
			
	}
}
