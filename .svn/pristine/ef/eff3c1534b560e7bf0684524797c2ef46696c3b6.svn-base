package org.ulis.service;

import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;
import org.springframework.web.servlet.ModelAndView;
import org.ulis.domain.IntegrationMessage;
import org.ulis.domain.Send;
import org.ulis.domain.Student;
import org.ulis.persistence.SendMapper;
import org.ulis.persistence.StudentMapper;

@Service
public class IntegrationMessageServiceImpl implements IntegrationMessageService{
	@Resource
	SendMapper sendMapper;
	
	@Resource
	StudentMapper studentMapper;
	
	@Override
	public void send() {
		
	}

	@Override
	public Map<String,Object> view(int sendNo) {
		Send send = new Send();
		send.setSendNo(sendNo);
		return sendMapper.selectOne(send);
	}
	
	/**
	 * 통합메시지 목록 조회
	 * 관리자는 자신이 발신한 통합 메시지 목록을 조회
	 * 학생은 자신이 수신받은 통합 메시지 목록 조회
	 * 
	 * 관리자는 메시지 번호 학년 이름 제목 보낸 날짜 필요
	 * 학생은 발신인 이름,메시지 제목,내용 수신 날짜 필요
	 */
	@Override
	public List<Map<String,Object>> find() {
		ServletRequestAttributes servletRequestAttribute = (ServletRequestAttributes) RequestContextHolder
				.currentRequestAttributes();
		HttpServletRequest request = servletRequestAttribute.getRequest();
		HttpSession session = request.getSession(false);
		
//		int subjectNo = (int)session.getAttribute("subjectNo");
		
		List<Map<String,Object>> sendList = null;
		String roleType = session.getAttribute("roleType") != null ? (String)session.getAttribute("roleType") : "";
		String id = session.getAttribute("id") != null ? (String)session.getAttribute("id") : "";
		
		Send send = new Send();
		if(StringUtils.equalsIgnoreCase(roleType, "A")) {
			send.setAdministratorNo(id);
		} else {
			send.setStudentNo(id);
		}
		sendList = sendMapper.selectList(send);			
		return sendList;
	}
	
	@Override
	public List<Student> searchGrade(int gradeNo, HttpServletRequest request){
		HttpSession session = request.getSession();
		int subjectNo = (int)session.getAttribute("subjectNo");
		Student student = new Student();
		student.setGrade(gradeNo);
		student.setSubjectNo(subjectNo);
		return this.studentMapper.searchGrade(student);
	}
	
	@Override
	public boolean checkNull(IntegrationMessage integrationMessage,String students) {
		
		if(integrationMessage.getContent()== null 
				||integrationMessage.getContent().trim().equals("")
				||integrationMessage.getTitle()==null
				||integrationMessage.getTitle().trim().equals("")
				||students == null 
				||students.trim().equals("")){
			return false;
		}
		return true;
	}
	
	public void setStudents(String students) {
		String[] studentsArrays = students.split(",");
		Set studentSet = new HashSet();
		for(int i = 0; i<studentsArrays.length; i++) {
			studentSet.add(studentsArrays[i]);
		}
	}
}

